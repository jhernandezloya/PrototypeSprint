/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.5/userguide/java_library_plugin.html
 */
 

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'org.springframework.boot' version '2.3.4.RELEASE'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'	
	id 'java'
	id 'jacoco'
	id 'org.flywaydb.flyway' version '6.4.3'
	//para hacer que publique como un war
	id 'war'
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

group = 'cl.prototype.spring'
version = '0.0.1'
sourceCompatibility = '1.8'
compileJava {options.encoding = "ISO-8859-1"}   

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	//Para excluir el modulo de toncat en el org.springframework.boot
  compile.exclude module: 'spring-boot-starter-tomcat'
  compile.exclude group: 'org.apache.tomcat'
}


repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenCentral()
    jcenter()
}

dependencies {
   
    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:29.0-jre'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.13'
     /* Spring Boot */
    implementation 'org.springframework.boot:spring-boot-starter-web'
    //Incluir el jetty para que funcione en vez de TOMCAT
    providedRuntime('org.springframework.boot:spring-boot-starter-jetty')
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    runtimeOnly group: 'com.h2database', name: 'h2', version: '1.3.148'
}
// Para indicarle que el jar sea de tipo binario y ejecutable
/*bootJar {
    launchScript()
}*/

bootWar {
	manifest {
		attributes 'Main-Class': 'cl.prototype.App'
	}
}
